{
  "openapi": "3.0.0",
  "info": {
    "title": "Code Challenge - Squid Game",
    "version": "1.0.0"
  },
  "schemes": ["http", "https"],
  "paths": {
    "/api/v1.0/game": {
      "get": {
        "description": "Get a list of all Games",
        "produces": ["application/json"],
        "tags": ["game"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Game"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a Game",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Game"
              }
            }
          }
        },
        "produces": ["application/json"],
        "tags": ["game"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Game"
              }
            }
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "put": {
        "description": "Update a Game",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Game"
              }
            }
          }
        },
        "produces": ["application/json"],
        "tags": ["game"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Game"
              }
            }
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "/api/v1.0/game/{id}": {
      "get": {
        "description": "Get a Game by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Game ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "produces": ["application/json"],
        "tags": ["game"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Game"
              }
            }
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "/api/v1.0/guard": {
      "get": {
        "description": "Get a list of all Guards",
        "produces": ["application/json"],
        "tags": ["guard"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Guard"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a Guard",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Guard"
              }
            }
          }
        },
        "produces": ["application/json"],
        "tags": ["guard"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Guard"
              }
            }
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "put": {
        "description": "Update a Guard",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Guard"
              }
            }
          }
        },
        "produces": ["application/json"],
        "tags": ["guard"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Guard"
              }
            }
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "/api/v1.0/guard/{id}": {
      "get": {
        "description": "Get a Guard by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Guard ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "produces": ["application/json"],
        "tags": ["guard"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Guard"
              }
            }
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "/api/v1.0/player": {
      "get": {
        "description": "Get a list of all Players",
        "produces": ["application/json"],
        "tags": ["player"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Player"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a Player",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Player"
              }
            }
          }
        },
        "produces": ["application/json"],
        "tags": ["player"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Player"
              }
            }
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "put": {
        "description": "Update a Player",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Player"
              }
            }
          }
        },
        "produces": ["application/json"],
        "tags": ["player"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Player"
              }
            }
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "/api/v1.0/player/{id}": {
      "get": {
        "description": "Get a Player by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Player ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "produces": ["application/json"],
        "tags": ["player"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Player"
              }
            }
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Error"
              }
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "/api/v1.0/death": {
      "get": {
        "description": "Get a list of all Deaths",
        "tags": ["death"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Death"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/death/sync": {
      "put": {
        "description": "Sync entity records with 3rd party data feed",
        "tags": ["death"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/DeathSyncDto"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/death/{id}": {
      "get": {
        "description": "Get a Death by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Death ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["death"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Death"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/HttpError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/HttpError"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "HttpError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Game": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "uid": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Guard": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "uid": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Player": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "uid": {
          "type": "string",
          "format": "uuid"
        },
        "number": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "dept": {
          "type": "integer"
        },
        "dob": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Death": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "uid": {
          "type": "string",
          "format": "uuid"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DeathSyncDto": {
      "type": "object",
      "properties": {
        "created": {
          "type": "integer"
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "game",
      "description": "A Game"
    },
    {
      "name": "guard",
      "description": "A Guard"
    },
    {
      "name": "player",
      "description": "A Player"
    },
    {
      "name": "death",
      "description": "A Death"
    }
  ]
}
